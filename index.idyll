// installed components
// npm install --save react-simple-pie-chart
// npm install --save idyll-vega-lite vega vega-lite

[meta title:"Monty Hall Problem" description:"An explorable explaination" /]

[Header
  fullWidth:true
  title:"The Monty Hall Problem"
  subtitle:"A logic defying probability paradox"
  author:"Christie Gan, Grant Suyama, Juan Alvarez"
  authorLink:"https://github.com/suyamag/info474final/tree/master"
  background:"#222222"
  color:"#ffffff"
   /]

[Step onEnterView:`dataToBeCharted=[
]`]
//delete pie if reach top
[/Step]

## Introduction

![doors](static/images/doors.png)

The game show Let's Make a Deal came about in 1963 in the US and was created and produced by Stefan Hatos and Monty Hall.
Selected audience members make deals with the host, Monty, where the member is offered something of value
and given a choice of whether to keep or exchange it for a different, possibly more valuable item.
One of these deals became a famous brain teaser, later known as the Monty Hall problem, named 
after the host, Monty Hall. This probability puzzle's answer seems counterintuitive but
the math checks out. 
//line breaks don't work unless you use a period... exclamation points don't count
Let's take a look at this problem.

## The Scenario

![opendoor](static/images/open_door.png)
Suppose you're on a game show, and you're given the choice of three doors: Behind one door is a car; behind the others, goats. You pick a door, say No. 1, and the host Monty, who knows what's behind the doors, opens another door, say No. 3, which has a goat. He then says to you, "Do you want to change your pick to door No. 2?"

**Is it to your advantage to switch your choice?**

// The answer is: ***yes!***

// In fact, changing your door choice actually **doubles** your choice of winning the car!

## how does this work? 

We'll begin by reiterating the rules of the game and the behavior of Monty:

1) The contestant may pick any one of the three doors

2) Monty must then open a door that was not picked by the contestant

3) Monty must always reveal a goat behind the new door, not a car

4) Monty must always offer the chance to switch from the original door to the remaining door

Now, given these rules we can start looking at our possible choices and the probabilities behind each choice!

## Choices and Outcomes

![doors](static/images/doors.png)
[Step onEnterView:`dataToBeCharted=[
  {x: "goat", y: 66.66},
  {x: "car", y: 33.33}
]`]
// STEP 1 render pie
[/Step]

There are three parts to this game which we will go over:

1)The Player's Door

2)Monty's Door

3)The Player's Choice

###The Player's Door

At the start of the game, each door is closed.

When you initially pick a door, you only have a 1/3 chance of finding the car.

Alternatively, you have a 2/3 chance of picking a goat on your initial guess.

In our example, we'll assume we've picked **door 1**

![doorprob](static/images/doorprob.png)

###Monty's Door

After you've made your inital pick, Monty reveals a goat.

![opendoor](static/images/open_door.png)
[Step onEnterView:`dataToBeCharted=[
  {x: "50?", y: 50},
  {x: "50?", y: 50}
]`]
// STEP 2 deception pie
[/Step]
At this point we know that behind the two closed doors is only one car and one goat, so the odds appear to have gone up to 1/2 for each door.

Due to the rules of the game, Monty's pick relies both on what your initial pick was, and where the car is.

If you picked a goat on your initial guess (2/3), then Monty is **forced** to open the one other goat door.

![goat](static/images/goat.png)
![goat2](static/images/goat2.png)

If you picked the car on your initial guess (1/3), then Monty may open either of the two goat doors available.

![car](static/images/car.png)

###The Player's Choice

Now you are given the choice to either stay or switch. While it still might be tempting to think that the chances for winning at this point are even,
they are surprisingly not. This is where the paradox occurs because these odds aren't actually accurate!
If you scroll up you can try using the outcomes of Monty's choice to help direct your own choice.

*hint: Think about what would be the result of either staying or switching in each outcome,*
***and which outcomes are more likely.***

![opendoor](static/images/open_door.png)
[Step onEnterView:`dataToBeCharted=[
  {x: "Player Choice", y: 1}
]`]
// STEP 3 interactive pie
[/Step]


**Which choice will give you the better odds of winning?**
// buttons for pie
[button onClick:`dataToBeCharted=[
  {x: "goat", y: 66.66},
  {x: "car", y: 33.33}
]`]Stay Door 1[/button]
[button onClick:`dataToBeCharted=[
  {x: "goat", y: 33.33},
  {x: "car", y: 66.66}
]`]Switch Door 2[/button]
[button onClick:`dataToBeCharted=[
  {x: "goat... What did you expect?", y: 1}
]`]Door 3[/button]

[Scroller]
#The Solution

**It is to your advantage to switch choices.** 
You have a 1/3 of winning the car by staying, and a 2/3 chance of winning the car by switching
[Aside]
  ![tree](static/images/tree.png)
  [caption onEnterView:`dataToBeCharted=[
]`][/caption]
[/Aside]
##Understanding the solution
If you picked a goat on your initial guess then Monty will open the second goat door.
Thanks to Monty's choice, you know that switching would lead to a win because only the car is left.
Therefore, since you have a 2/3 chance to pick a goat, then using the switch method has a 2/3 chance of winning!

##Simulations
By running a Monte Carle simulation, the results of many trials agrees with the result of our deduction

![trials](static/images/montecarlo.png)

[link text:"source" url:"https://www.reddit.com/r/dataisbeautiful/comments/7lcffs/i_ran_a_monte_carlo_analysis_of_the_monty_hall/" /].

##Naive Bayes
We can further corroborate this solution by using Naive Bayes to deduce the probability of the car being behind each door given the fact that Monty has opened a door.
The proof below displays that the probability of the car being behind your first choice as 1/3, while the probability of the car being behind
the other door is 2/3

![naive](static/images/prooftree.jpg)
[link text:"source" url:"http://ucanalytics.com/blogs/bayes-theorem-monty-hall-problem/" /]

#Dispelling Misconceptions

If you decide to stay, then your chances remain 1/3, because you made your choice before any prior interference was made, and decided to stick with that choice

## 50/50 probability and Markov chain
Many statisticians have argued that Monty's choice does not reveal any new information relevant to the probabilities of the doors.
For example, a Markov chain is a series of random events where the outcome of event n is only dependent on the outcome of the event n-1.
Because the door that Monty opens does not directly touch the chain of events that leads to the second choice, it should have no bearing on the final outcome.
Therefore, the chain of probabilities is as follows:

P(initial door) + P(second choice)

(1/3) + (1/3)(1/2) = 1/2.

This is a true assessment if only looking at the subjective probability. The uncertainty of the situation is 50/50 because the remaining outcomes of either 
a winning or a losing scenario is 50% (one car and one goat).

However, what we displayed earlier contradicts this assertion from an objective probability point of view.

1/3 of the time you will already have the right door, and 2/3 of the time you have the wrong door. Switching after choosing the wrong door leads to a win.
Therefore you should switch from an objective point of view.
  
[/Scroller]

###Special thanks to:
* Yea Seul Kim and Alex Kale for the great class on interactive information visualization
* Ken Long for the insights on Markov Chain
* Matthew Conlen for the [a href:"https://idyll-lang.org/"]Idyll[/a] framework

[var name:"dataToBeCharted" value:`[
  // initialize QT 3.14
]` /]

[fixed]

[Chart type:"pie" data:dataToBeCharted /]

[/fixed]